- name: "SQS Queue"
  vars:
    resource: "arn:aws:sqs:{{ region }}:{{ aws.account }}:{{ item.name }}"
  sqs_queue:
    name: "{{ item.name }}"
    region: "{{ region }}"
    default_visibility_timeout: "{{ item.VisibilityTimeout | default(sqs.default.VisibilityTimeout) }}"
    receive_message_wait_time: "{{ item.ReceiveMessageWaitTimeSeconds | default(sqs.default.ReceiveMessageWaitTimeSeconds) }}"
    delivery_delay: "{{ item.DelaySeconds | default(sqs.default.DelaySeconds) }}" 
    policy:
      Version: "2008-10-17"
      Id: "__default_policy_ID"
      Statement: "{{ item.PolicyStatement | default(sqs.default.PolicyStatement) | combine( { 'Resource': resource} ) }}"
    queue_type: "{{ item.type | default('standard') }}"
    content_based_deduplication: "{{ item.deduplication | default(omit) }}"
  loop_control:
    label: "{{ item.name }}"
  loop: "{{ sqs.queues }}"

- block:
  - name: "Create bucket"
    s3_bucket:
      name: "{{ item.name }}"
      state: present
    loop: "{{ triggers.buckets }}"
    loop_control:
      label: "{{ item.name }}"


  - name: "Create dictionaries"
    amazon.aws.s3_object:
      bucket: "{{ item.0.name }}"
      object: "{{ item.1.directory }}"
      mode: create
      region: "{{ region }}"
    loop_control:
      label: "s3://{{ item.0.name }}/{{ item.1.directory }}"
    loop: "{{ triggers.buckets|subelements('notifications') }}"


  #- name: "Create S3 Trigger"
  #  community.aws.s3_bucket_notification:
  #    state: present
  #    event_name: "{{ item.1.name }}"
  #    bucket_name: "{{ item.0.name }}"
  #    queue_arn: "arn:aws:sqs:{{ region }}:{{ aws.account }}:{{ item.1.queue }}"
  #    events: ["s3:ObjectCreated:*"]
  #    prefix: "{{ item.directory }}"
  #  loop_control:
  #    label: "{{ item.1.name }}: {{ item.0.name }}/{{ item.1.directory }} -> {{ item.1.queue }}"
  #  loop: "{{ triggers.buckets }}"


  - name: "S3 notification file ( /tmp/s3-{{ item.name }}-notification.json )"
    template:
      src: "s3-notification.json.j2"
      dest: "/tmp/s3-{{ item.name }}-notification.json"
    loop: "{{ triggers.buckets }}"
    loop_control:
      label: "{{ item.name }}"


  - name: "Apply S3 triggers"
    shell: "aws s3api put-bucket-notification-configuration --bucket={{ item.name }} --cli-input-json file:///tmp/s3-{{ item.name }}-notification.json"
    loop: "{{ triggers.buckets }}"
    loop_control:
      label: "{{ item.name }}"


  when: triggers is defined
