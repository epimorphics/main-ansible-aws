- name: "Create bucket"
  s3_bucket:
    name: "{{ item }}"
    state: present
  loop: "{{ triggers | map(attribute='bucket') | unique }}"
  when: triggers is defined


- name: "Create dictionaries"
  amazon.aws.s3_object:
    bucket: "{{ item.bucket }}"
    object: "{{ item.directory }}"
    mode: create
    region: "{{ region }}"
  loop_control:
    label: "{{ item.bucket }}/{{ item.directory }}"
  loop: "{{ triggers }}"
  when: triggers is defined


- name: "SQS Queue"
  vars:
    resource: "arn:aws:sqs:{{ region }}:{{ aws.account }}:{{ item.name }}"
  sqs_queue:
    name: "{{ item.name }}"
    region: "{{ region }}"
    default_visibility_timeout: "{{ item.VisibilityTimeout | default(sqs.default.VisibilityTimeout) }}"
    receive_message_wait_time: "{{ item.ReceiveMessageWaitTimeSeconds | default(sqs.default.ReceiveMessageWaitTimeSeconds) }}"
    delivery_delay: "{{ item.DelaySeconds | default(sqs.default.DelaySeconds) }}" 
    policy:
      Version: "2008-10-17"
      Id: "__default_policy_ID"
      Statement: "{{ item.PolicyStatement | default(sqs.default.PolicyStatement) | combine( { 'Resource': resource} ) }}"
    queue_type: "{{ item.type | default('standard') }}"
    content_based_deduplication: "{{ item.deduplication | default(omit) }}"
  loop_control:
    label: "{{ item.name }}"
  loop: "{{ sqs.queues }}"


- name: "Create S3 Trigger"
  community.aws.s3_bucket_notification:
    state: present
    event_name: "{{ item.name }}"
    bucket_name: "{{ item.bucket }}"
    queue_arn: "arn:aws:sqs:{{ region }}:{{ aws.account }}:{{ item.queue }}"
    events: ["s3:ObjectCreated:*"]
    prefix: "{{ item.directory }}"
  loop_control:
    label: "{{ item.name }}: {{ item.bucket }}/{{ item.directory }} -> {{ item.queue }}"
  loop: "{{ triggers }}"
  when: triggers is defined
